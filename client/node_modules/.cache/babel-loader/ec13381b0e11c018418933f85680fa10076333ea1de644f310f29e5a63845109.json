{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Blockchain-Based-Decentralized-Cloud-Storage-System\\\\client\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Display.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Display = _ref => {\n  _s();\n  let {\n    contract,\n    account\n  } = _ref;\n  const [data, setData] = useState([]);\n  const getdata = async () => {\n    let dataArray;\n    const Otheraddress = document.querySelector(\".address\").value;\n    try {\n      if (Otheraddress) {\n        dataArray = await contract.display(Otheraddress);\n      } else {\n        dataArray = await contract.display(account);\n        console.log(\"Data from contract:\", dataArray);\n      }\n    } catch (e) {\n      alert(\"You don't have access\");\n      console.error(e);\n      return;\n    }\n    const isEmpty = !dataArray || dataArray.length === 0;\n    if (!isEmpty) {\n      const str_array = dataArray.toString().split(\",\");\n      console.log(\"Processed Data Array:\", str_array);\n      const images = str_array.map((item, i) => {\n        const url = `https://gateway.pinata.cloud/ipfs/${item.replace(\"ipfs://\", \"\")}`;\n        console.log(\"Generated URL:\", url); // Debugging\n\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `Image ${i + 1}`,\n            className: \"image-list\",\n            onError: e => e.target.style.display = \"none\" // Hide broken images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      });\n      setData(images);\n    } else {\n      alert(\"No images to display\");\n      setData([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: data.length > 0 ? data : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Address\",\n      className: \"address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"center button\",\n      onClick: getdata,\n      children: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useState","Display","contract","account","data","setData","getdata","dataArray","Otheraddress","document","querySelector","value","display","console","log","e","alert","error","isEmpty","length","str_array","toString","split","images","map","item","i","url","replace","target","style"],"sources":["C:/Users/Aditya/Blockchain-Based-Decentralized-Cloud-Storage-System/client/src/components/Display.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./Display.css\";\r\n\r\nconst Display = ({ contract, account }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getdata = async () => {\r\n    let dataArray;\r\n    const Otheraddress = document.querySelector(\".address\").value;\r\n\r\n    try {\r\n      if (Otheraddress) {\r\n        dataArray = await contract.display(Otheraddress);\r\n      } else {\r\n        dataArray = await contract.display(account);\r\n        console.log(\"Data from contract:\", dataArray);\r\n      }\r\n    } catch (e) {\r\n      alert(\"You don't have access\");\r\n      console.error(e);\r\n      return;\r\n    }\r\n\r\n    const isEmpty = !dataArray || dataArray.length === 0;\r\n\r\n    if (!isEmpty) {\r\n      const str_array = dataArray.toString().split(\",\");\r\n      console.log(\"Processed Data Array:\", str_array);\r\n\r\n      const images = str_array.map((item, i) => {\r\n        const url = `https://gateway.pinata.cloud/ipfs/${item.replace(\r\n          \"ipfs://\",\r\n          \"\"\r\n        )}`;\r\n        console.log(\"Generated URL:\", url); // Debugging\r\n\r\n        return (\r\n          <a href={url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img\r\n              src={url}\r\n              alt={`Image ${i + 1}`}\r\n              className=\"image-list\"\r\n              onError={(e) => (e.target.style.display = \"none\")} // Hide broken images\r\n            />\r\n          </a>\r\n        );\r\n      });\r\n\r\n      setData(images);\r\n    } else {\r\n      alert(\"No images to display\");\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"image-list\">{data.length > 0 ? data : <p>No images found</p>}</div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Address\"\r\n        className=\"address\"\r\n      />\r\n      <button className=\"center button\" onClick={getdata}>\r\n        Get Data\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAC;AAAA;AAEvB,MAAMC,OAAO,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,OAAO,GAAG,YAAY;IAC1B,IAAIC,SAAS;IACb,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAACC,KAAK;IAE7D,IAAI;MACF,IAAIH,YAAY,EAAE;QAChBD,SAAS,GAAG,MAAML,QAAQ,CAACU,OAAO,CAACJ,YAAY,CAAC;MAClD,CAAC,MAAM;QACLD,SAAS,GAAG,MAAML,QAAQ,CAACU,OAAO,CAACT,OAAO,CAAC;QAC3CU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEP,SAAS,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVC,KAAK,CAAC,uBAAuB,CAAC;MAC9BH,OAAO,CAACI,KAAK,CAACF,CAAC,CAAC;MAChB;IACF;IAEA,MAAMG,OAAO,GAAG,CAACX,SAAS,IAAIA,SAAS,CAACY,MAAM,KAAK,CAAC;IAEpD,IAAI,CAACD,OAAO,EAAE;MACZ,MAAME,SAAS,GAAGb,SAAS,CAACc,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MACjDT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEM,SAAS,CAAC;MAE/C,MAAMG,MAAM,GAAGH,SAAS,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACxC,MAAMC,GAAG,GAAI,qCAAoCF,IAAI,CAACG,OAAO,CAC3D,SAAS,EACT,EAAE,CACF,EAAC;QACHf,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEa,GAAG,CAAC,CAAC,CAAC;;QAEpC,oBACE;UAAG,IAAI,EAAEA,GAAI;UAAS,MAAM,EAAC,QAAQ;UAAC,GAAG,EAAC,qBAAqB;UAAA,uBAC7D;YACE,GAAG,EAAEA,GAAI;YACT,GAAG,EAAG,SAAQD,CAAC,GAAG,CAAE,EAAE;YACtB,SAAS,EAAC,YAAY;YACtB,OAAO,EAAGX,CAAC,IAAMA,CAAC,CAACc,MAAM,CAACC,KAAK,CAAClB,OAAO,GAAG,MAAQ,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;QACnD,GANec,CAAC;UAAA;UAAA;UAAA;QAAA,QAOhB;MAER,CAAC,CAAC;MAEFrB,OAAO,CAACkB,MAAM,CAAC;IACjB,CAAC,MAAM;MACLP,KAAK,CAAC,sBAAsB,CAAC;MAC7BX,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,YAAY;MAAA,UAAED,IAAI,CAACe,MAAM,GAAG,CAAC,GAAGf,IAAI,gBAAG;QAAA,UAAG;MAAe;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAO,eACnF;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,eAAe;MAC3B,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB,eACF;MAAQ,SAAS,EAAC,eAAe;MAAC,OAAO,EAAEE,OAAQ;MAAA,UAAC;IAEpD;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBACR;AAEP,CAAC;AAAC,GAjEIL,OAAO;AAAA,KAAPA,OAAO;AAmEb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}