{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Blockchain-Based-Decentralized-Cloud-Storage-System\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport \"./App.css\";\n\n// Import the image\nimport BlockchainImage from './assets/Blockchain-in-hiring.png';\n// Update with correct path\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const loadProvider = async () => {\n      if (provider) {\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        let contractAddress = \"0x5d31369c236b158401df937eb7d211e3d6fe9ee0\";\n        const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n        setContract(contract);\n        setProvider(provider);\n      } else {\n        console.error(\"Metamask is not installed\");\n      }\n    };\n    provider && loadProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!modalOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"share\",\n      onClick: () => setModalOpen(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setModalOpen: setModalOpen,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"D-FILE STORAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: BlockchainImage,\n            alt: \"Blockchain Illustration\",\n            style: {\n              width: '300px',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\"\n            },\n            children: [\"Account : \", account ? account : \"Not connected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n            account: account,\n            provider: provider,\n            contract: contract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            contract: contract,\n            account: account\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yGCxXQ87YH7dBPtrsE7SNVrz99c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","Upload","FileUpload","Display","Modal","BlockchainImage","App","account","setAccount","contract","setContract","provider","setProvider","modalOpen","setModalOpen","providers","Web3Provider","window","ethereum","loadProvider","on","location","reload","send","signer","getSigner","address","getAddress","contractAddress","Contract","abi","console","error","color","width","height"],"sources":["C:/Users/Aditya/Blockchain-Based-Decentralized-Cloud-Storage-System/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport Display from \"./components/Display\";\r\nimport Modal from \"./components/Modal\";\r\nimport \"./App.css\";\r\n\r\n// Import the image\r\nimport BlockchainImage from './assets/Blockchain-in-hiring.png';\r\n // Update with correct path\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [contract, setContract] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n    const loadProvider = async () => {\r\n      if (provider) {\r\n        window.ethereum.on(\"chainChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n\r\n        window.ethereum.on(\"accountsChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n        await provider.send(\"eth_requestAccounts\", []);\r\n        const signer = provider.getSigner();\r\n        const address = await signer.getAddress();\r\n        setAccount(address);\r\n        let contractAddress = \"0x5d31369c236b158401df937eb7d211e3d6fe9ee0\";\r\n\r\n        const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\r\n        setContract(contract);\r\n        setProvider(provider);\r\n      } else {\r\n        console.error(\"Metamask is not installed\");\r\n      }\r\n    };\r\n    provider && loadProvider();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!modalOpen && (\r\n        <button className=\"share\" onClick={() => setModalOpen(true)}>\r\n          Share\r\n        </button>\r\n      )}\r\n      {modalOpen && (\r\n        <Modal setModalOpen={setModalOpen} contract={contract}></Modal>\r\n      )}\r\n\r\n      <div className=\"App\">\r\n        <h1 style={{ color: \"white\" }}>D-FILE STORAGE</h1>\r\n        <div className=\"content-container\">\r\n          <div className=\"image-container\">\r\n            <img src={BlockchainImage} alt=\"Blockchain Illustration\" style={{ width: '300px', height: 'auto' }} />\r\n          </div>\r\n          <div className=\"text-container\">\r\n            <p style={{ color: \"white\" }}>\r\n              Account : {account ? account : \"Not connected\"}\r\n            </p>\r\n            <FileUpload\r\n              account={account}\r\n              provider={provider}\r\n              contract={contract}\r\n            />\r\n            <Display contract={contract} account={account} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}